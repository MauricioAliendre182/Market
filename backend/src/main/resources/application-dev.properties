server.port=8091

# Database
# always: It ensures that the database initialization is triggered every time the application starts.
spring.sql.init.mode=always
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/market}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:M@ps5250864POST}

# Ensure data.sql runs AFTER Hibernate creates tables
# This ensures that the database is always initialized with your SQL scripts, regardless of whether the database schema already exists
# When set to always, Spring Boot will run any SQL scripts found in the classpath (schema.sql for creating tables and data.sql for inserting data)
spring.datasource.initialization-mode=always
# This is useful for debugging, as it allows you to see all the SQL queries executed by Hibernate in the application logs. 
# It helps confirm whether the data insertion or schema updates are being executed.
spring.jpa.show-sql=true
# This property can be necessary when you need to ensure that the JPA entities and the ApplicationContext are initialized before performing database operations. 
# It is useful in scenarios where the SQL initialization scripts (like data.sql) should be executed only after the application context is completely set up.
spring.jpa.defer-datasource-initialization=true

# update: This means that Hibernate will try to automatically update the database schema based on the current entity model. 
# It will compare the entities with the existing schema and apply necessary changes (adding columns, tables, etc.), but it won't drop or recreate the schema.
spring.jpa.hibernate.ddl-auto=update
